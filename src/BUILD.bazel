load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

package(default_visibility = ["//visibility:public"])

cc_binary(
    name = "uchenchat",
    srcs = ["main.cc"],
    visibility = ["//visibility:public"],
    deps = [
        ":chat",
        ":fetch",
        ":llms",
        ":tui",
        "@abseil-cpp//absl/flags:flag",
        "@abseil-cpp//absl/flags:parse",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/log:check",
        "@abseil-cpp//absl/log:flags",
        "@abseil-cpp//absl/log:initialize",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
    ],
)

cc_library(
    name = "chat",
    srcs = ["chat.cc"],
    hdrs = ["chat.h"],
    deps = [
        ":event_loop",
        "@abseil-cpp//absl/functional:any_invocable",
        "@abseil-cpp//absl/synchronization",
    ],
)

cc_library(
    name = "fetch",
    srcs = ["fetch.cc"],
    hdrs = ["fetch.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@abseil-cpp//absl/cleanup",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
        "@curl",
        "@nlohmann_json//:json",
    ],
)

cc_library(name="event_loop",
    srcs = ["event_loop.cc"],
    hdrs = ["event_loop.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@abseil-cpp//absl/functional:any_invocable",
        "@abseil-cpp//absl/synchronization",
        "@abseil-cpp//absl/log",
    ],
)

cc_library(
    name = "json_decode",
    srcs = ["json_decode.cc"],
    hdrs = ["json_decode.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/strings",
        "@nlohmann_json//:json",
    ],
)

cc_library(
    name = "llms",
    srcs = [
        "anthropic.cc",
        "model.cc",
        "openai.cc",
    ],
    hdrs = [
        "anthropic.h",
        "model.h",
        "openai.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":chat",
        ":fetch",
        ":json_decode",
        "@abseil-cpp//absl/flags:flag",
        "@abseil-cpp//absl/log:check",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
        "@nlohmann_json//:json",
    ],
)

cc_library(
    name = "tui",
    srcs = ["input.cc"],
    hdrs = [
        "input.h",
        "tui.h",
    ],
    deps = ["@abseil-cpp//absl/strings"],
)
